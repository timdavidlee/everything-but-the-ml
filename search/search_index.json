{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Everything But the ML School of machine learning engineering This is an entry-level course designed to equip new machine learning engineers and data scientists with all the supporting non-ml tech skills to do technical jobs effectively. Too many a data-science contributer has flailed about trying to get into a server, or struggled at simple shell commands to peek into text files. The goal: YES : getting around file systems + moving stuff manipulating files with shell commands connecting to virtual machines deploying services common ETL mistakes SORTA : tensorflow + pytorch in the context of memory usage + file management pandas and numpy for speed + storage, not for feature development NO : model algorithms covered data science metrics or scoring discussed","title":"Home"},{"location":"#everything-but-the-ml","text":"","title":"Everything But the ML"},{"location":"#school-of-machine-learning-engineering","text":"This is an entry-level course designed to equip new machine learning engineers and data scientists with all the supporting non-ml tech skills to do technical jobs effectively. Too many a data-science contributer has flailed about trying to get into a server, or struggled at simple shell commands to peek into text files.","title":"School of machine learning engineering"},{"location":"#the-goal","text":"YES : getting around file systems + moving stuff manipulating files with shell commands connecting to virtual machines deploying services common ETL mistakes SORTA : tensorflow + pytorch in the context of memory usage + file management pandas and numpy for speed + storage, not for feature development NO : model algorithms covered data science metrics or scoring discussed","title":"The goal:"},{"location":"api/","text":"What is an API, what is RESTFUL? What are protocol buffers, and why should i care?","title":"API/RESTFUL"},{"location":"api/#what-is-an-api-what-is-restful","text":"","title":"What is an API, what is RESTFUL?"},{"location":"api/#what-are-protocol-buffers-and-why-should-i-care","text":"","title":"What are protocol buffers, and why should i care?"},{"location":"http/","text":"","title":"HTTP"},{"location":"sys/","text":"","title":"FileSystems"},{"location":"airflow/intro/","text":"Just enough Airflow Why airflow for data scientists? Just Enough Airflow","title":"Airflow"},{"location":"airflow/intro/#just-enough-airflow","text":"","title":"Just enough Airflow"},{"location":"airflow/intro/#why-airflow-for-data-scientists","text":"","title":"Why airflow for data scientists?"},{"location":"airflow/intro/#just-enough-airflow_1","text":"","title":"Just Enough Airflow"},{"location":"aws/boto/","text":"","title":"Boto"},{"location":"aws/buckets/","text":"","title":"Boto Library"},{"location":"bash/linux-types/","text":"Common Types of Linux","title":"Types of Linux"},{"location":"bash/linux-types/#common-types-of-linux","text":"","title":"Common Types of Linux"},{"location":"bash/piping/","text":"Command Line \"Fu\" A lot of this content was sourced from: https://github.com/parrt/msds692/blob/master/notes/bashcsv.ipynb https://bconnelly.net/posts/working_with_csvs_on_the_command_line/","title":"Command Line \"Fu\""},{"location":"bash/piping/#command-line-fu","text":"A lot of this content was sourced from: https://github.com/parrt/msds692/blob/master/notes/bashcsv.ipynb https://bconnelly.net/posts/working_with_csvs_on_the_command_line/","title":"Command Line \"Fu\""},{"location":"bash/quality-of-life/","text":"Quality of Life Shell Packages This assumes that you should have brew installed, a macOSX package manager. A lot of this is courtesy of this great github brew install bash-completion git brew install --cask \\ qlcolorcode \\ qlstephen \\ qlmarkdown \\ quicklook-json \\ qlprettypatch \\ quicklook-csv \\ betterzip \\ webpquicklook \\ suspicious-package","title":"Quality of Life Installs"},{"location":"bash/quality-of-life/#quality-of-life-shell-packages","text":"This assumes that you should have brew installed, a macOSX package manager. A lot of this is courtesy of this great github brew install bash-completion git brew install --cask \\ qlcolorcode \\ qlstephen \\ qlmarkdown \\ quicklook-json \\ qlprettypatch \\ quicklook-csv \\ betterzip \\ webpquicklook \\ suspicious-package","title":"Quality of Life Shell Packages"},{"location":"data-formats/csv/","text":"","title":"CSV"},{"location":"data-formats/json/","text":"","title":"json"},{"location":"data-formats/parquet/","text":"","title":"parquet"},{"location":"data-formats/pickle/","text":"","title":"pickle"},{"location":"docker/basics/","text":"","title":"Basics"},{"location":"docker/building_images/","text":"","title":"Building Images"},{"location":"docker/intro/","text":"What is Docker? From the website : Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker\u2019s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production. The key benefit of docker is containers that can wrap little: applications specific versions of applications different operating systems Why is important for data scientists? Two fold: chances are the model + algorithm that will be deployed will be wrapped in a docker + used in production Makes it 100x easier to borrow research code (older) without having to update all the dependencies needed to run. this could also be done with a different git clone, but many of these repos are tied to specific versions of pytorch , tensorflow , or other frameworks Installation Visit the following website: https://docs.docker.com/desktop/install/mac-install/ even easier: brew install --cask docker Some samples We can pull various versions of applications + actually have them run at the same time! docker pull alpine:latest docker pull ubuntu:18.04 # old version docker pull ubuntu:20.04 # newer version docker pull python:3.8 # old version docker pull python:3.10 # new version Benefits : - No longer need to install + uninstall various versions locally, (potentially messing up system tools) - if supporting multiple versions, (want to test installations), can download the containers + install on various versions to ensure the behavior is expected","title":"Why docker?"},{"location":"docker/intro/#what-is-docker","text":"From the website : Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker\u2019s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production. The key benefit of docker is containers that can wrap little: applications specific versions of applications different operating systems","title":"What is Docker?"},{"location":"docker/intro/#why-is-important-for-data-scientists","text":"Two fold: chances are the model + algorithm that will be deployed will be wrapped in a docker + used in production Makes it 100x easier to borrow research code (older) without having to update all the dependencies needed to run. this could also be done with a different git clone, but many of these repos are tied to specific versions of pytorch , tensorflow , or other frameworks","title":"Why is important for data scientists?"},{"location":"docker/intro/#installation","text":"Visit the following website: https://docs.docker.com/desktop/install/mac-install/ even easier: brew install --cask docker","title":"Installation"},{"location":"docker/intro/#some-samples","text":"We can pull various versions of applications + actually have them run at the same time! docker pull alpine:latest docker pull ubuntu:18.04 # old version docker pull ubuntu:20.04 # newer version docker pull python:3.8 # old version docker pull python:3.10 # new version Benefits : - No longer need to install + uninstall various versions locally, (potentially messing up system tools) - if supporting multiple versions, (want to test installations), can download the containers + install on various versions to ensure the behavior is expected","title":"Some samples"},{"location":"git/branches/","text":"","title":"Contributing"},{"location":"git/cloning-basics/","text":"","title":"Getting other's code"},{"location":"git/repo-level-actions/","text":"","title":"Repo-Level Commands"},{"location":"python/collections/","text":"","title":"Collections"},{"location":"python/generators/","text":"","title":"Generators"},{"location":"python/linting/","text":"","title":"Linting"},{"location":"python/list_comprehensions/","text":"","title":"List comprehensions"},{"location":"python/parallel_processing/","text":"","title":"Parallel processing"},{"location":"python/pytest/","text":"","title":"Pytest"},{"location":"python/versions-and-envs/","text":"","title":"Versions and envs"},{"location":"ssh/let-me-in/","text":"SSH","title":"Getting into a VM"},{"location":"ssh/let-me-in/#ssh","text":"","title":"SSH"},{"location":"ssh/tunneling/","text":"","title":"Tunneling to a VM"},{"location":"vim/basics/","text":"Just Enough VIM text editing By default vi will be on any system that is tunneled into. will install some upgrades to make ending locally a bit better: git clone https://github.com/amix/vimrc.git ~/.vim_runtime && \\ sh ~/.vim_runtime/install_awesome_vimrc.sh $ vi At a minim There are two modes","title":"Basic file editng"},{"location":"vim/basics/#just-enough-vim-text-editing","text":"By default vi will be on any system that is tunneled into. will install some upgrades to make ending locally a bit better: git clone https://github.com/amix/vimrc.git ~/.vim_runtime && \\ sh ~/.vim_runtime/install_awesome_vimrc.sh $ vi At a minim There are two modes","title":"Just Enough VIM text editing"}]}